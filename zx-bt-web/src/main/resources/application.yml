server:
  port: 8081
endpoints:
  shutdown:
    enabled: true
    sensitive: false
management:
  security:
    enabled: false
spring:
  datasource:
    url: jdbc:mysql://rm-uf659fc1pyp136g328o.mysql.rds.aliyuncs.com:3306/zx-bt?useSSL=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
    username: root
    password: Lzb112358*
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # DataSource配置
    druid:
      # 初始容量
      initial-size: 20
      # 最大连接池个数
      max-active: 100
      # 最小空闲
      min-idle: 10
      # 获取连接最大等待时间
      max-wait: 3000
      # 是否缓存preparedStatement(PSCache),对游标提升巨大,建议oracle开启,mysql关闭
      pool-prepared-statements: false
      # 启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: 0
      # 检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: select 'x'
      # 检测连接是否有效的超时时间。秒,底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 30
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 驱逐策略间隔,如果连接空闲时间大于minEvictableIdleTimeMillis,则关闭
      time-between-eviction-runs-millis: 60000
      # 在池中的最小生存时间
      min-evictable-idle-time-millis: 30000
      # 在池中的最大生存时间
      max-evictable-idle-time-millis: 600000
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
      keep-alive: true
      # 连接初始化时,执行的sql
      connection-init-sqls:
      # 开启的过滤器,常用的有  监控统计:stat  日志:log4j 防御sql注入:wall
      filters: stat,wall,log4j
      # 合并多个dataSource的监控记录
      use-global-data-source-stat: true

      # 监控配置
      # 是否启用stat-filter默认值true
      web-stat-filter.enabled: true
      # 匹配的uri
      web-stat-filter.url-pattern: /*
      # 忽略的uri *.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
      web-stat-filter.exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 是否启用session统计
      web-stat-filter.session-stat-enable: true
      web-stat-filter.session-stat-max-count: 1000
      web-stat-filter.principal-session-name: zx
      web-stat-filter.principal-cookie-name: zx
      # 监控单个url调用的sql列表。
      web-stat-filter.profile-enable: true
      # StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      #是否启用监控界面默认值true
      stat-view-servlet.enabled: true
      # web.xml的url-pattern,也就是访问/druid/*访问到该servlet
      stat-view-servlet.url-pattern: /druid/*
      #  允许清空统计数据
      stat-view-servlet.reset-enable: true
      # 用户名
      stat-view-servlet.login-username: zx
      # 密码
      stat-view-servlet.login-password: 123456
      # ip白名单
      stat-view-servlet.allow:
      # ip黑名单
      stat-view-servlet.deny:
      # 过滤器配置
      filter:
        stat:
          # 聚合sql 开启慢sql查询
          merge-sql: true
          # 是否开启慢sql查询
          log-slow-sql: false
          # 超过多少时间为慢sql 开启慢sql查询
          slow-sql-millis: 500
          # 是否启用
          enabled: true
        # 安全配置,防止sql注入. 具体参数可查看文档,包括禁止各类增删查改的操作
#        wall:
#          config:
  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: none
    show-sql: false
  thymeleaf:
    cache: false
    check-template-location: false
    content-type: text/html
    check-template: false
    enabled: true
    encoding: UTF-8
#    mode: LEGACYHTML5
    suffix: .html
    prefix: classpath:/templates/
    mode: HTML
security:
  basic:
    enabled: false

zx-bt:
  es:
    port: 9300
    ip: 182.61.10.245
#    ip: 172.19.87.203
    cluster-name: zx
  web:
    page-size: 10

