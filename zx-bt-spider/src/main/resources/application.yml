server:
  port: 8080
endpoints:
  shutdown:
    enabled: true
    sensitive: false
management:
  security:
    enabled: false
spring:
  datasource:
    url: jdbc:mysql://106.12.98.48:3306/zx-bt?useSSL=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
#    url: jdbc:mysql://127.0.0.1:3306/zx-bt?useSSL=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10
    username: root
    password: Manager@2017
#    password: 123456
    driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    # DataSource配置
    druid:
      # 初始容量
      initial-size: 5
      # 最大连接池个数
      max-active: 200
      # 最小空闲
      min-idle: 5
      # 获取连接最大等待时间
      max-wait: 3000
      # 是否缓存preparedStatement(PSCache),对游标提升巨大,建议oracle开启,mysql关闭
      pool-prepared-statements: false
      # 启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      max-pool-prepared-statement-per-connection-size: 0
      # 检测连接是否有效的sql，要求是一个查询语句，常用select 'x'。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会起作用。
      validation-query: select 'x'
      # 检测连接是否有效的超时时间。秒,底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      validation-query-timeout: 30
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-borrow: false
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false
      # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 驱逐策略间隔,如果连接空闲时间大于minEvictableIdleTimeMillis,则关闭
      time-between-eviction-runs-millis: 60000
      # 在池中的最小生存时间
      min-evictable-idle-time-millis: 30000
      # 在池中的最大生存时间
      max-evictable-idle-time-millis: 600000
      # 连接池中的minIdle数量以内的连接，空闲时间超过minEvictableIdleTimeMillis，则会执行keepAlive操作。
      keep-alive: true
      # 连接初始化时,执行的sql
      connection-init-sqls:
      # 开启的过滤器,常用的有  监控统计:stat  日志:log4j 防御sql注入:wall
      filters: stat,wall,log4j
      # 合并多个dataSource的监控记录
      use-global-data-source-stat: true

      # 监控配置
      # 是否启用stat-filter默认值true
      web-stat-filter.enabled: true
      # 匹配的uri
      web-stat-filter.url-pattern: /*
      # 忽略的uri *.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*
      web-stat-filter.exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      # 是否启用session统计
      web-stat-filter.session-stat-enable: true
      web-stat-filter.session-stat-max-count: 1000
      web-stat-filter.principal-session-name: zx
      web-stat-filter.principal-cookie-name: zx
      # 监控单个url调用的sql列表。
      web-stat-filter.profile-enable: true
      # StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
      #是否启用监控界面默认值true
      stat-view-servlet.enabled: false
      # web.xml的url-pattern,也就是访问/druid/*访问到该servlet
      stat-view-servlet.url-pattern: /druid/*
      #  允许清空统计数据
      stat-view-servlet.reset-enable: true
      # 用户名
      stat-view-servlet.login-username: zx
      # 密码
      stat-view-servlet.login-password: 123456
      # ip白名单
      stat-view-servlet.allow:
      # ip黑名单
      stat-view-servlet.deny:
      # 过滤器配置
      filter:
        stat:
          # 聚合sql 开启慢sql查询
          merge-sql: true
          # 是否开启慢sql查询
          log-slow-sql: false
          # 超过多少时间为慢sql 开启慢sql查询
          slow-sql-millis: 500
          # 是否启用
          enabled: true
        # 安全配置,防止sql注入. 具体参数可查看文档,包括禁止各类增删查改的操作
#        wall:
#          config:
  jpa:
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      ddl-auto: none
    show-sql: false
security:
  basic:
    enabled: false
zx-bt:
  http:
    # 获取连接请求超时时间
    connection-request-timeout: 1000
    # 连接超时时间
    connection-timeout: 1500
    # 最大连接数
    max-connection-num: 300
    # 握手超时时间
    socket-timeout: 1500
  es:
    cluster-name: zx
    ip: 182.61.10.245
#    ip: 172.19.87.203
    port: 9300
  performance:
    # find_node任务,线程数
    find-node-task-thread-num: 30
    # find_node任务, 发送间隔. 毫秒
    find-node-task-interval-ms: 0
    # find_node任务,最大队列长度
    findNodeTaskMaxQueueLength: 4096
    # UDP服务器主任务线程数,单个端口的数量
    udp-server-main-thread-num: 3

    # fetchMetadataByPeerTask,最大线程数
    fetch-metadata-by-peer-task-tread-num: 3
    # fetchMetadataByPeerTask,连接成功后等待peer超时时间
    fetch-metadata-by-peer-task-read-timeout-second: 10

    # fetchMetadataByOtherWebTask,等待尝试获取队列最大长度
    fetch-metadata-by-other-web-task-queue-num: 102400
    # fetchMetadataByOtherWebTask,最大线程数
    fetch-metadata-by-other-web-task-thread-num: 100

    # get_peers任务,最多同时进行的任务数
    get-peers-task-concurrent-num: 50
    # get_peers任务, info_hash等待队列长度
    get-peers-task-info-hash-queue-len: 512
    # get_peers任务过期时间
    get-peers-task-expire-second: 200
    # get_peers请求, 最小发送间隔
    get-peers-request-send-interval-ms: 4
    # get_peers任务, 任务满载后,暂停开启新任务时间
    get-peers-task-pause-second: 10
    # get_peers任务, 开启新任务最大间隔
    get-peers-task-create-interval-ms: 1000

    # infoHash布隆过滤器 预期最大数量
    info-hash-filter-max-num: 9999999
    #  infoHash布隆过滤器, 可接受误报比例
    info-hash-filter-fpp: 0.0001

    # 连接peer任务TCP线程数
    tcp-client-thread-num: 6
    # 连接peer任务TCP连接超时时间(ms)
    tcp-connect-timeout-ms: 2000

    # 路由表 非自己的节点id 的一侧分支, 最大可存储的层数. <=160
    routing-table-prefix-len: 8
    # 路由表分段锁 数量
    routing-table-lock-num: 10

  main:
    # 是否开启主任务
    start: true
    # 是否为主节点
    master: false
    # 主节点url
    masterUrl: http://1106.12.98.48:8080/filter
    # 当前开启的解析器类型
    infoHashParserTypes:
    # 配置版本标识
    configVersion: 1.0
    # 布隆过滤器,重置间隔时间,小时
    infoHashFilterResetHours: 24
    ports:
      - 44444
      - 44445
      - 44446
      - 44447
      - 44448
      - 44449
      - 44450
      - 44451
      - 44452
      - 44453
      - 44454
      - 44455
      - 44456
      - 44457
      - 44458
      - 44459
      - 44460
      - 44461
      - 44462
      - 44463
      - 44464
      - 44465
      - 44466
      - 44467
      - 44468
      - 44469
      - 44470
      - 44471
      - 44472
      - 44473
      - 44474
    ip: 106.12.98.48
    init-addresses:
      # 以下是比较有名的节点.其中utorrent是比较好的.剩余两个有点垃圾
      - router.utorrent.com:6881
      - router.bittorrent.com:6881
      - router.bitcomet.com:6881
      - dht.transmissionbt.com:6881
      # 以下是我运行一段时间后,给我announce_peer请求topN节点
      - 219.239.29.248:57512
      - 42.199.54.36:12871
      - 183.213.186.126:12598
      - 117.73.240.255:12256
      - 119.195.59.70:1175
      - 180.158.197.148:6883
      - 223.72.54.74:16843
      - 101.106.239.235:22398
      - 223.211.252.242:64764
      - 219.140.164.85:6881
      - 42.198.164.149:1114
      - 188.226.39.110:1024
      - 122.135.81.237:15353
      - 103.95.95.54:16001
      - 121.69.103.218:3734
      - 211.161.244.45:40303
      - 115.175.237.113:4863
      - 124.204.205.209:52166
      - 115.175.100.238:21658
      - 125.62.5.208:4773
      - 14.197.145.222:13477
      - 39.178.246.249:15776
      - 220.115.235.145:45876
      - 101.241.125.87:16001
      - 114.88.163.209:6881
      - 182.83.151.33:1793
      - 124.23.134.219:27398
      - 222.85.139.20:16001
      - 138.19.55.39:6881
      - 219.150.63.220:16001
      - 223.211.77.44:7297
      - 101.45.106.246:42826
      - 101.245.125.28:41665
      - 49.210.19.168:48921
      - 180.79.56.123:16001
      - 119.164.86.20:6881
      - 180.77.55.9:6881
      - 125.62.6.51:3301
      - 1.90.183.23:16001
      - 220.112.16.170:3024
      - 175.188.159.152:2286
      - 211.162.9.82:10296
      - 1.15.125.120:6191
      - 154.45.216.209:1048
      - 124.23.133.15:19129
      - 211.161.200.51:8742
      - 14.130.206.26:32848
      - 144.12.16.142:12782
      - 117.73.155.191:50473
      - 1.15.127.52:9219
      - 59.109.151.77:7612
      - 42.199.58.209:11645
      - 115.33.52.89:57090
      - 59.108.15.88:8297
      - 125.236.223.243:45065
      - 115.174.48.156:6881
      - 1.13.211.102:16001
      - 114.61.95.160:23663
      - 125.62.52.217:65473
      - 46.11.74.20:4445
      - 121.69.127.19:25133
      - 101.45.227.239:24085
      - 101.232.143.219:22458
      - 113.47.239.75:16001
      - 49.221.78.168:16001
      - 101.41.90.241:16001
      - 103.25.28.25:3669
      - 49.221.225.211:46489
      - 115.190.82.210:1163
      - 154.45.216.226:1118
      - 115.34.155.2:21829
      - 125.62.63.86:50645
      - 223.210.50.238:20169
      - 101.246.184.135:13114
      - 183.210.197.51:14754
      - 211.161.245.64:44219
      - 223.64.87.136:17409
      - 122.135.81.237:15353
      - 101.45.217.84:6881
      - 121.4.95.179:52792
      - 101.246.184.240:21393
      - 101.240.97.213:16001
      - 220.114.101.228:6881
      - 188.235.156.245:4445



